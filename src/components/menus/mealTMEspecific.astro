---
import "../../styles/global.css";
import { db } from "../../lib/db.ts";

const url = new URL(Astro.request.url);
const selectedIngredientIds = url.searchParams.getAll("ingredients").map(id => Number(id));

let ingredientesPorTipo = {};

if (selectedIngredientIds.length > 0) {
  const ingredientesSeleccionados = await db
    .selectFrom("ingredients")
    .innerJoin("Ingredient_Types", "ingredients.ingType_ID", "Ingredient_Types.ingType_ID")
    .select([
      "ingredients.ingredient_ID",
      "ingredients.nombre_Ingrediente", 
      "ingredients.porcion_Ingrediente",
      "ingredients.unidad_Ingrediente",
      "ingredients.ingType_ID",
      "Ingredient_Types.ingType_Name"
    ])
    .where("ingredients.ingredient_ID", "in", selectedIngredientIds)
    .execute();

  // Agrupa por tipo
  ingredientesPorTipo = ingredientesSeleccionados.reduce((acc, ing) => {
    const key = String(ing.ingType_ID);
    if (!acc[key]) acc[key] = [];
    acc[key].push(ing);
    return acc;
  }, {});
}

let tiemposComida = ['Desayuno', 'Batido', 'Almuerzo', 'Comida', 'Colación', 'Cena'];
const diasSemana = ['Lunes', 'Martes', 'Miércoles', 'Jueves', 'Viernes', 'Sábado', 'Domingo'];

let equivalentesPorTiempo = {
  'Desayuno': [
    { tipoId: '5', nombre: '1 cereal', cantidad: 1 },
    { tipoId: '4', nombre: '2 frutas', cantidad: 2 }
  ],
  'Batido': [
    { tipoId: '4', nombre: '2 frutas', cantidad: 2 },
    { tipoId: '8', nombre: '1 grasa con proteína', cantidad: 1 },
    { tipoId: '5', nombre: '1 cereal', cantidad: 1 },
    { tipoId: '7', nombre: '1 lácteo', cantidad: 1 }
  ],
  'Almuerzo': [
    { tipoId: '5', nombre: '2 cereales', cantidad: 2 },
    { tipoId: '2', nombre: '2 origen animal', cantidad: 2 },
    { tipoId: '1', nombre: '1 vegetal', cantidad: 1 }
  ],
  'Comida': [
    { tipoId: '2', nombre: '2 vegetales', cantidad: 2 },
    { tipoId: '1', nombre: '2 cereales', cantidad: 2 },
    { tipoId: '6', nombre: '1 grasa y aceite', cantidad: 1 },
    { tipoId: '4', nombre: '1 fruta', cantidad: 1 }
  ],
  'Colación': [
    { tipoId: '1', nombre: '1 vegetal', cantidad: 1 },
    { tipoId: '7', nombre: '1 grasa con proteína', cantidad: 1 },
    { tipoId: '4', nombre: '1 fruta', cantidad: 1 }
  ],
  'Cena': [
    { tipoId: '4', nombre: '2 frutas', cantidad: 2 },
    { tipoId: '5', nombre: '3 origen animal', cantidad: 1 },
    { tipoId: '2', nombre: '1 cereal', cantidad: 1 }
  ]
};

let horariosPorTiempo = {
  'Desayuno': '07:00',
  'Batido': '10:00',
  'Almuerzo': '13:00',
  'Comida': '16:00',
  'Colación': '18:00',
  'Cena': '20:00'
};

const tiposIngredientes = [
  { id: '1', nombre: 'Vegetales' },
  { id: '2', nombre: 'Origen Animal' },
  { id: '3', nombre: 'Leguminosas' },
  { id: '4', nombre: 'Frutas' },
  { id: '5', nombre: 'Cereales' },
  { id: '6', nombre: 'Grasas y Aceites' },
  { id: '7', nombre: 'Lácteos' },
  { id: '8', nombre: 'Grasa con Proteína' },
  { id: '9', nombre: 'Azúcares' }
];
---

<!-- Modal para editar tiempo específico -->
      <div id="modal-editar-tiempo" class="fixed inset-0 bg-black bg-opacity-50 hidden z-50 flex items-center justify-center">
        <div class="bg-white rounded-lg p-6 max-w-2xl w-full mx-4 max-h-[90vh] overflow-y-auto">
          <div class="flex justify-between items-center mb-6">
            <h2 class="text-2xl font-bold text-gray-900">Editar tiempo de comida</h2>
            <button id="cerrar-modal-editar" class="text-gray-500 hover:text-gray-700 text-2xl">&times;</button>
          </div>
          
          <div class="mb-4">
            <label class="block text-sm font-medium text-gray-700 mb-2">Nombre del tiempo de comida</label>
            <input 
              type="text" 
              id="editar-tiempo-nombre" 
              class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500"
            >
          </div>
          
          <!-- Agregando campo de horario -->
          <div class="mb-4">
            <label class="block text-sm font-medium text-gray-700 mb-2">Horario</label>
            <input 
              type="time" 
              id="editar-tiempo-horario" 
              class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500"
            >
          </div>
          
          <div class="mb-6">
            <div class="flex justify-between items-center mb-3">
              <label class="block text-sm font-medium text-gray-700">Equivalencias (tipos de alimentos)</label>
              <button 
                id="agregar-equivalencia-editar"
                class="bg-green-500 hover:bg-green-600 text-white px-3 py-1 rounded text-sm font-semibold transition"
              >
                + Agregar
              </button>
            </div>
            <div id="equivalencias-editar" class="space-y-2">
              <!-- Las equivalencias aparecerán aquí -->
            </div>
          </div>
          
          <div class="mt-6">
            <label class="block text-sm font-medium text-gray-700 mb-3">Días en los que aplica este tiempo de comida</label>
            <div class="grid grid-cols-2 gap-2">
              {diasSemana.map(dia => (
                <label class="flex items-center space-x-2">
                  <input 
                    type="checkbox" 
                    class="dia-checkbox" 
                    data-dia={dia}
                    class="rounded border-gray-300 text-blue-600 focus:ring-blue-500"
                  >
                  <span class="text-sm text-gray-700">{dia}</span>
                </label>
              ))}
            </div>
          </div>
          
          <div class="flex justify-end gap-4">
            <button 
              id="cancelar-editar"
              class="bg-gray-500 hover:bg-gray-600 text-white px-6 py-2 rounded-lg font-semibold transition"
            >
              Cancelar
            </button>
            <button 
              id="guardar-editar"
              class="bg-blue-500 hover:bg-blue-600 text-white px-6 py-2 rounded-lg font-semibold transition"
            >
              Guardar
            </button>
          </div>
        </div>
      </div>